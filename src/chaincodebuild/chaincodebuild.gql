# 创建合约
mutation createChaincodebuild($displayName: String!, $description: String, $language: String, $network: String!, $version: String!, $file: Upload, $files: [Upload!], $fileRelativePaths: [String!]) {
  chaincodebuildCreate(chaincodebuild: { displayName: $displayName, description: $description, language: $language, network: $network, version: $version, file: $file, files: $files, fileRelativePaths: $fileRelativePaths }) {
    name
    displayName
    creationTimestamp
    version
    status
  }
}

# 合约列表
query getChaincodebuilds($network: String!, $version: String, $displayName: String) {
  chaincodebuilds(network: $network, version: $version, displayName: $displayName) {
    name
    displayName
    creationTimestamp
    version
    status
    pipelineImageUrl
    network
    initiator
    ibppeers {
      name
    }
    channels {
      name
      displayName
    }
  }
}

# 合约详情
query getChaincodebuild($name: String!) {
  chaincodebuild(name: $name) {
    name
    displayName
    creationTimestamp
    version
    status
    pipelineImageUrl
    network
    initiator
    organizations {
      name
    }
    ibppeers {
      name
      namespace
    }
    channels {
      name
      displayName
      epolicy {
        name
        displayName
        value
      }
    }
    minio {
      bucket
      object
    }
  }
}

# 删除合约
mutation deleteChaincodebuild($name: String!) {
  chaincodebuildDelete(name: $name) {
    code
    status
    reason
  }
}

# 升级合约
mutation upgradeChaincodebuild($displayName: String!, $file: Upload, $files: [Upload!], $language: String, $network: String!, $newVersion: String!, $fileRelativePaths: [String!]) {
  chaincodebuildUpgrade(chaincodebuild: {displayName: $displayName, file: $file, files: $files, language: $language, network: $network, newVersion: $newVersion, fileRelativePaths: $fileRelativePaths}) {
    name
    displayName
    creationTimestamp
    version
    status
  }
}
