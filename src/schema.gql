# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Chaincode {
  """通道"""
  channel: String

  """我创建的"""
  createdByMe: Boolean

  """名称(chaincodebuild.spec.id)"""
  displayName: String

  """策略"""
  epolicy: String

  """name"""
  name: ID!

  """状态"""
  phase: ChaincodePhase

  """版本"""
  version: String
}

"""「通道」状态"""
enum ChaincodePhase {
  """投票通过"""
  ChaincodeApproved

  """等待投票"""
  ChaincodePending

  """已经安装，Pod正常运行"""
  ChaincodeRunning

  """投票不通过"""
  ChaincodeUnapproved
}

type Chaincodebuild {
  """通道"""
  channels: [Channel!]

  """创建时间"""
  creationTimestamp: String

  """名称"""
  displayName: String!

  """节点"""
  ibppeers: [SpecPeer!]

  """发起者（组织）"""
  initiator: String

  """MinIO信息"""
  minio: MinIO

  """metadata.name"""
  name: ID!

  """所在网络"""
  network: String

  """组织"""
  organizations: [Organization!]

  """Pipeline Results"""
  pipelineImageUrl: String

  """状态（为Created，显示「正常」才能部署升级，为Deploying，显示「准备中」）"""
  status: CrdStatusType

  """版本"""
  version: String
}

type Channel {
  """合约"""
  chaincode: [Chaincode!]

  """我创建的"""
  createdByMe: Boolean

  """创建时间"""
  creationTimestamp: String

  """描述"""
  description: String

  """背书策略"""
  epolicy: [Epolicy!]

  """我参与的"""
  iamInvolved: Boolean

  """组织数量"""
  members: [SpecMember!]

  """name"""
  name: ID!

  """网络"""
  network: String

  """我的节点"""
  peers: [SpecPeer!]

  """通道连接文件（profile.json）"""
  profileJson: String

  """状态"""
  status: CrdStatusType
}

input ChannelPeer {
  """名称"""
  name: String!

  """命名空间（所属组织）"""
  namespace: String!
}

"""IBPCR 状态"""
enum CrdStatusType {
  """ChannelArchived"""
  ChannelArchived

  """ChannelCreated"""
  ChannelCreated

  """正常"""
  Created

  """
  Deployed is the status when the component's deployment is done successfully
  """
  Deployed

  """Deploying is the status when component is being deployed"""
  Deploying

  """异常"""
  Error

  """已激活"""
  FederationActivated

  """已解散"""
  FederationDissolved

  """组建失败"""
  FederationFailed

  """组建中"""
  FederationPending

  """Initializing is the status when a component is initializing"""
  Initializing

  """正常"""
  NetworkCreated

  """已解散"""
  NetworkDissolved

  """
  Precreated is the status of the orderers when they are waiting for config block
  """
  Precreated

  """
  Warning is the status when a component is running, but will fail in future
  """
  Warning
}

"""背书策略"""
type Epolicy {
  """所在通道"""
  channel: String!

  """创建时间"""
  creationTimestamp: String

  """描述"""
  description: String

  """策略名称"""
  displayName: String

  """更新时间"""
  lastHeartbeatTime: String

  """name"""
  name: ID!

  """策略内容"""
  value: String!
}

"""联盟"""
type Federation {
  """创建时间"""
  creationTimestamp: String!

  """描述"""
  description: String

  """发起者"""
  initiator: Organization

  """加入时间（当前用户所属组织加入此联盟的时间）"""
  joinedAt: String

  """name"""
  name: ID!

  """网络个数"""
  networks: [Network!]

  """组织"""
  organizations: [Organization!]

  """提议策略"""
  policy: ProposalPolicy

  """状态"""
  status: CrdStatusType
}

type Ibppeer {
  """加入的通道"""
  channels: [String!]

  """我创建的"""
  createdByMe: Boolean

  """创建时间"""
  creationTimestamp: String!

  """节点配置"""
  limits: SpecResource

  """name"""
  name: ID!

  """加入的网络"""
  networks: [String!]

  """运行状态"""
  status: CrdStatusType
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

"""操作状态"""
type K8sV1Status {
  apiVersion: String
  code: Float
  details: K8sV1StatusDetails
  kind: String
  message: String
  reason: String
  status: String
}

"""操作状态详情"""
type K8sV1StatusDetails {
  group: String
  kind: String
  name: String
  uid: String
}

type MinIO {
  bucket: String
  object: String
}

type Mutation {
  """部署合约（返回true，只表示这个操作触发成功，而不是部署合约成功）"""
  chaincodeDeploy(chaincode: NewChaincode!): Boolean!

  """创建合约"""
  chaincodebuildCreate(chaincodebuild: NewChaincodebuild!): Chaincodebuild!

  """删除合约"""
  chaincodebuildDelete(
    """合约名称（displayName, 非name）"""
    displayName: String!

    """此合约所在网络"""
    network: String!
  ): [K8sV1Status!]!

  """升级合约"""
  chaincodebuildUpgrade(chaincodebuild: UpgradeChaincodebuild!): Chaincodebuild!

  """创建通道"""
  channelCreate(channel: NewChannel!, network: String!): Channel!

  """邀请组织"""
  channelMemberUpdate(members: [String!]!, name: String!): Boolean!

  """加入/去除Peer节点"""
  channelUpdate(channel: UpdateChannel!, name: String!): Channel!

  """创建策略"""
  epolicyCreate(epolicy: NewEpolicyInput!): Epolicy!

  """删除策略"""
  epolicyDelete(name: String!): K8sV1Status!

  """向联盟中添加组织（返回true：只表示这个操作触发成功，而不是添加组织成功）"""
  federationAddOrganization(
    name: String!

    """要添加的组织"""
    organizations: [String!]!
  ): Boolean!

  """创建联盟"""
  federationCreate(federation: NewFederationInput!): Federation!

  """删除联盟（FederationDissolved）"""
  federationDelete(name: String!): K8sV1Status!

  """解散联盟（返回true：只表示这个操作触发成功，而不是解散联盟成功)"""
  federationDissolve(name: String!): Boolean!

  """从联盟中驱逐一个组织（返回true：只表示这个操作触发成功，而不是驱逐组织成功）"""
  federationRemoveOrganization(
    name: String!

    """要驱逐的组织"""
    organization: String!
  ): Boolean!

  """创建IBPPeer节点"""
  ibppeerCreate(
    """新增节点数"""
    count: Float

    """所在组织"""
    organization: String!
  ): [Ibppeer!]!

  """创建网络"""
  networkCreate(network: NewNetworkInput!): Network!

  """删除网络"""
  networkDelete(name: String!): K8sV1Status!

  """释放网络（返回true：只表示这个操作触发成功，而不是释放网络成功）"""
  networkDissolve(
    """所属联盟"""
    federation: String!

    """网络发起者（组织）"""
    initiator: String!
    name: String!
  ): Boolean!

  """新增组织"""
  organizationCreate(organization: NewOrganizationInput!): Organization!

  """删除组织"""
  organizationDelete(name: String!): K8sV1Status!

  """修改组织"""
  organizationUpdate(name: String!, organization: UpdateOrganization!): Organization!

  """更新投票"""
  voteUpdate(name: String!, organization: String!, vote: UpdateVote!): Vote!
}

"""网络"""
type Network {
  """智能合约"""
  chaincode: [Chaincode!]

  """通道列表"""
  channels: [Channel!]

  """我的节点数"""
  clusterSize: Float

  """创建时间"""
  creationTimestamp: String

  """描述"""
  description: String

  """到期时间"""
  expiredTime: String

  """所属联盟"""
  federation: String

  """网络发起者（组织）"""
  initiator: Organization

  """更新时间"""
  lastHeartbeatTime: String

  """节点配置"""
  limits: SpecResource

  """name"""
  name: ID!

  """引擎类型"""
  ordererType: String

  """网络中组织"""
  organizations: [Organization!]

  """网络中的所有节点"""
  peers: [Ibppeer!]

  """状态（网络运行中：Deployed，网络停止：NetworkDissolved）"""
  status: CrdStatusType

  """节点存储"""
  storage: String

  """节点版本"""
  version: OrderVersion
}

input NewChaincode {
  """通道"""
  channel: String!

  """合约名称"""
  displayName: String!

  """背书策略"""
  epolicy: String!

  """安装节点（暂不支持）"""
  ibppeer: String

  """合约name"""
  name: String!
}

input NewChaincodebuild {
  """描述"""
  description: String

  """合约名称（规则：^[a-z][a-z0-9]{7,63}$）"""
  displayName: String!

  """合约文件"""
  file: Upload

  """文件夹内文件的相对路径"""
  fileRelativePaths: [String!]

  """合约文件夹"""
  files: [Upload!]

  """选择语言"""
  language: String

  """此合约构建所在网络"""
  network: String!

  """合约版本号"""
  version: String!
}

input NewChannel {
  """描述"""
  description: String

  """发起者（组织）"""
  initiator: String!

  """
  通道名称，规则：小写字母、数字、“-”，开头和结尾只能是字母或数字`（[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*）`
  """
  name: String!

  """配置成员（组织）"""
  organizations: [String!]

  """Peer节点，仅能选Deployed的（通过「getIbppeersForCreateChannel」API获取）"""
  peers: [ChannelPeer!]!

  """准入门槛"""
  policy: String
}

input NewEpolicyInput {
  """通道（当前用户组织参与的channel，使用接口：getChannelsForCreateEpolicy）"""
  channel: String

  """策略描述"""
  description: String

  """策略名称"""
  displayName: String!

  """
  策略内容：可选组织为已选通道内的成员，语法参考（https://hyperledger-fabric.readthedocs.io/en/latest/endorsement-policies.html#endorsement-policy-syntax）
  """
  value: String
}

input NewFederationInput {
  """联盟描述"""
  description: String

  """发起者（当前用户所在的组织）"""
  initiator: String!

  """
  联盟名称，规则：小写字母、数字、“-”，开头和结尾只能是字母或数字`（[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*）`
  """
  name: String!

  """选择组织"""
  organizations: [String!]

  """提议投票策略"""
  policy: ProposalPolicy!
}

input NewNetworkInput {
  """共识集群节点数（要求单数，默认1）"""
  clusterSize: Float!

  """描述"""
  description: String

  """所属联盟"""
  federation: String!

  """发起者（当前用户所在的组织）"""
  initiator: String!

  """
  网络名称，规则：小写字母、数字、“-”，开头和结尾只能是字母或数字`（[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*）`
  """
  name: String!

  """共识算法"""
  ordererType: String

  """选择版本"""
  version: OrderVersion
}

input NewOrganizationInput {
  """描述"""
  description: String

  """展示名"""
  displayName: String

  """
  组织名称，规则：小写字母、数字、“-”，开头和结尾只能是字母或数字`（[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*）`
  """
  name: String!
}

"""操作"""
enum Operator {
  """加入节点"""
  add

  """移除节点"""
  remove
}

"""新建网络的版本"""
enum OrderVersion {
  """企业版"""
  Enterprise

  """金融安全版"""
  Finance

  """标准版"""
  Standard
}

"""组织"""
type Organization {
  """管理员"""
  admin: String

  """加入的通道"""
  channels: [String!]

  """创建时间"""
  creationTimestamp: String!

  """描述"""
  description: String

  """名称"""
  displayName: String

  """所在联盟"""
  federations: [String!]

  """所有节点"""
  ibppeers: [Ibppeer!]

  """加入时间（只在联盟中使用）"""
  joinedAt: String

  """更新时间"""
  lastHeartbeatTime: String

  """name"""
  name: ID!

  """所在网络"""
  networks: [Network!]

  """原因"""
  reason: String

  """状态"""
  status: CrdStatusType

  """成员"""
  users: [User!]
}

type Proposal {
  """创建时间"""
  creationTimestamp: String!

  """截止时间"""
  endAt: String

  """相关联盟"""
  federation: String

  """相关内容"""
  information: JSONObject

  """发起者"""
  initiator: Organization

  """name"""
  name: ID!

  """提议策略"""
  policy: ProposalPolicy

  """当前状态"""
  status: ProposalStatus

  """提议类型"""
  type: ProposalType

  """当前用户所在组织的投票状态"""
  voted: VotePhase

  """提议内的所有投票"""
  votes: [Vote!]
}

"""提议策略"""
enum ProposalPolicy {
  """"""
  All

  """"""
  Majority

  """"""
  OneVoteVeto
}

"""「提议」状态"""
enum ProposalStatus {
  """提议异常"""
  Error

  """提议超时"""
  Expired

  """提议异常"""
  Failed

  """等待中"""
  Pending

  """提议成功"""
  Succeeded

  """投票中"""
  Voting
}

"""「提议」类型"""
enum ProposalType {
  """联盟添加组织时创建的提议"""
  AddMemberProposal

  """ArchiveChannelProposal"""
  ArchiveChannelProposal

  """创建联盟时创建的提议"""
  CreateFederationProposal

  """联盟驱逐组织时创建的提议"""
  DeleteMemberProposal

  """创建合约时创建的提议"""
  DeployChaincodeProposal

  """解散联盟的时候创建的提议"""
  DissolveFederationProposal

  """释放网络时创建的提议"""
  DissolveNetworkProposal

  """UnarchiveChannelProposal"""
  UnarchiveChannelProposal

  """通道邀请组织的提议"""
  UpdateChannelMemberProposal

  """更新合约时创建的提议"""
  UpgradeChaincodeProposal
}

type Query {
  """合约详情"""
  chaincodebuild(name: String!): Chaincodebuild!

  """合约列表"""
  chaincodebuilds(
    """此合约所在网络"""
    network: String!
  ): [Chaincodebuild!]!

  """通道详情"""
  channel(name: String!): Channel!

  """我参与的通道(区块链浏览器)"""
  channels: [Channel!]

  """创建策略时，可选的通道"""
  channelsForCreateEpolicy(network: String!): [Channel!]!

  """策略列表"""
  epolicies(network: String): [Epolicy!]!

  """联盟详情"""
  federation(name: String!): Federation!

  """联盟列表"""
  federations: [Federation!]!

  """获取组织下的节点列表"""
  ibppeers(
    """所在组织"""
    organization: String!
  ): [Ibppeer!]!

  """获取「创建/更新通道」时的可选节点列表"""
  ibppeersForCreateChannel(
    """此通道的组织（包括发起者和配置成员）"""
    members: [String!]!
  ): [Organization!]!

  """网络详情"""
  network(name: String!): Network!

  """网络列表"""
  networks: [Network!]!

  """组织详情"""
  organization(name: String!): Organization!

  """组织列表"""
  organizations(
    """根据组织管理员搜索"""
    admin: String
  ): [Organization!]!

  """提议详情"""
  proposal(name: String): Proposal!

  """提议列表"""
  proposals: [Proposal!]!
}

"""成员个数"""
type SpecMember {
  """是否为发起者"""
  initiator: Boolean

  """加入时间"""
  joinedAt: String
  joinedBy: String

  """组织名称"""
  name: String
  namespace: String
}

type SpecPeer {
  """名称"""
  name: String

  """命名空间（所属组织）"""
  namespace: String
}

type SpecResource {
  """CPU"""
  cpu: String!

  """Memory"""
  memory: String!
}

input UpdateChannel {
  """操作类型"""
  operate: Operator!

  """
  被操作的节点，若是添加节点，则Peer节点仅能选Deployed的（通过「getIbppeersForCreateChannel」API获取）
  """
  peers: [ChannelPeer!]!
}

input UpdateOrganization {
  """管理员"""
  admin: String

  """组织成员"""
  users: [String!]
}

input UpdateVote {
  """是否通过"""
  decision: Boolean!

  """备注"""
  description: String
}

input UpgradeChaincodebuild {
  """合约名称"""
  displayName: String!

  """合约文件"""
  file: Upload

  """文件夹内文件的相对路径"""
  fileRelativePaths: [String!]

  """合约文件夹"""
  files: [Upload!]

  """选择语言"""
  language: String

  """此合约构建所在网络"""
  network: String!

  """升级后版本号"""
  newVersion: String!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

"""用户"""
type User {
  """创建时间"""
  creationTimestamp: String!

  """备注"""
  description: String

  """邮箱"""
  email: String!

  """是否为组织管理员（组织列表中）"""
  isOrganizationAdmin: Boolean

  """加入组织时间（组织列表中）"""
  joinedAt: String

  """用户名"""
  name: ID!

  """密码"""
  password: String

  """手机"""
  phone: String!
}

type Vote {
  """表决"""
  decision: Boolean

  """备注"""
  description: String

  """name"""
  name: ID!

  """投票人"""
  organizationAdmin: String

  """所属组织名称"""
  organizationName: String

  """所属提议名称"""
  proposalName: String

  """状态"""
  status: VotePhase

  """投票时间"""
  voteTime: String
}

"""「Vote」状态"""
enum VotePhase {
  """The organization administrator has not yet participated in the voting."""
  Created

  """The proposal has been finished."""
  Finished

  """未投票"""
  NotVoted

  """The organization administrator has vote for the proposal."""
  Voted
}